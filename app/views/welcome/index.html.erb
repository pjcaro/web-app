<h1>Welcome</h1>
<%= form_tag(root_path, method: :get) do %>
  <%= text_field_tag :query, params[:query] %>
  <%= submit_tag 'Search' %>
  <% if @total && params[:query] %>
    <%= @total %> results
  <% end %>
  
<% end %>
<p></p>

  <div style="display: flex; flex: 1">
    <div id="visualization" style="display: flex; flex: 1"></div>

    <div style="display: flex; flex: 1">
      <table style="width:100%">
        <tr>
          <th>Region</th>
          <th>Quantity</th> 
        </tr>
        <% @original.each do |value| %>
          <% unless value[0] === "Country" %>
            <tr>
              <td><%= value[0] %></td>
              <td><%= value[1] %></td> 
            </tr>
          <% end %>
        <% end %>
      </table>
    </div>
  </div>
  <div style="display: flex; flex: 1">
    <div id="columnchart_values" style="width: 900px; height: 300px;"></div>
    <div id="chart_div" style="display: flex; flex: 1"></div>
  </div>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      console.log(gon.countries);
        google.load('visualization', '1', {packages: ['geochart']});

      google.charts.setOnLoadCallback(drawChartPie);

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChartPie() {

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Topping');
        data.addColumn('number', 'Slices');
        data.addRows(gon.contributors_pie);

        // Set chart options
        var options = {'title':'Contributors',
                       'width':600,
                       'height':500};

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
        chart.draw(data, options);
      }
    var width, height, selectedRegion, resolution;

  
      width = 556;
      height = 400;
      selectedRegion = 'world';
      resolution = 'subcontinents';
  

    function drawVisualization() {
      var data = new google.visualization.DataTable();
      data.addColumn('string', 'Region');
      data.addColumn('number', 'Value');
      data.addRows(gon.regions);

      var options = {
        displayMode: 'regions',
        enableRegionInteractivity: 'true',
        resolution: resolution,
        region: selectedRegion,
        height: height,
        width: width
      };

      var geochart = new google.visualization.GeoChart(
          document.getElementById('visualization'));

      google.visualization.events.addListener(geochart, 'select', function() {
        var selection = geochart.getSelection();
				console.log(selection);
        if (selection.length == 1) {
          var selectedRow = selection[0].row;
          selectedRegion = data.getValue(selectedRow, 0);
          resolution = "countries";
          options.region = selectedRegion;
          options.resolution = resolution;
          //alert(resolution);
          var data2 = google.visualization.arrayToDataTable(gon.countries);
          geochart.draw(data2, options);
          }
      });

      geochart.draw(data, options);
    }
    
    google.setOnLoadCallback(drawVisualization);
    
    google.charts.load("current", {packages:['corechart']});
    google.charts.setOnLoadCallback(drawChart);

    function drawChart() {
      var data = google.visualization.arrayToDataTable(
      gon.contributors
    );

      var view = new google.visualization.DataView(data);


      var options = {
        width: 900,
        height: 600,
        legend: { position: 'top', maxLines: 3 },
        bar: { groupWidth: '75%' },
        isStacked: true,
      };
      var chart = new google.visualization.ColumnChart(document.getElementById("columnchart_values"));
      chart.draw(view, options);
    }
    </script>